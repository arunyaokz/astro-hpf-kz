---
import { COMPANY_NAME, TRANSLATIONS, KPI_DATA } from '../consts';
---

<section class="apple-hero">
  <div class="hero-container">
    
    <!-- Main Hero Content -->
    <div class="hero-content">
      <div class="hero-eyebrow" data-i18n="heroEyebrow">
        <span class="eyebrow-text">HPF.kz</span>
      </div>
      
      <h1 class="hero-title" data-i18n="heroTitle">
        重新定义<br />跨境物流
      </h1>
      
      <p class="hero-description" data-i18n="heroDescription">
        把复杂留给系统，把简单留给客户。<br />
        以极致确定性构建无摩擦的跨境物流网络。
      </p>
      
      <div class="hero-actions">
        <button class="btn-primary" data-i18n="getGreenChannel">
          获取绿通名额
        </button>
        <button class="btn-secondary" data-i18n="scheduleDemo">
          预约演示
        </button>
      </div>
    </div>
    
    <!-- Animated KPI Section -->
    <div class="kpi-showcase">
      <div class="kpi-grid">
        <div class="kpi-item" data-kpi="ontimeDelivery">
          <div class="kpi-value">
            <span class="animated-number" data-target="98.5">0</span>
            <span class="kpi-unit">%</span>
          </div>
          <div class="kpi-label" data-i18n="ontimeDelivery">准时达率</div>
        </div>
        
        <div class="kpi-item" data-kpi="intactRate">
          <div class="kpi-value">
            <span class="animated-number" data-target="99.2">0</span>
            <span class="kpi-unit">%</span>
          </div>
          <div class="kpi-label" data-i18n="intactRate">完损率</div>
        </div>
        
        <div class="kpi-item" data-kpi="responseTime">
          <div class="kpi-value">
            <span class="kpi-prefix">&lt;</span>
            <span class="animated-number" data-target="2">0</span>
            <span class="kpi-unit">H</span>
          </div>
          <div class="kpi-label" data-i18n="responseTime">响应时间</div>
        </div>
        
        <div class="kpi-item" data-kpi="satisfaction">
          <div class="kpi-value">
            <span class="animated-number" data-target="95">0</span>
            <span class="kpi-unit">%+</span>
          </div>
          <div class="kpi-label" data-i18n="satisfaction">客户满意度</div>
        </div>
      </div>
    </div>
    
    <!-- Scroll Indicator -->
    <div class="scroll-indicator">
      <div class="scroll-text" data-i18n="scrollToExplore">滚动探索更多</div>
      <div class="scroll-arrow">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M12 5V19M12 19L19 12M12 19L5 12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
    </div>
    
  </div>
  
  <!-- Background Elements -->
  <div class="hero-background">
    <div class="gradient-orb gradient-orb-1"></div>
    <div class="gradient-orb gradient-orb-2"></div>
    <div class="gradient-orb gradient-orb-3"></div>
  </div>
</section>

<style>
  .apple-hero {
    height: 100vh;
    min-height: 800px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    background: linear-gradient(135deg, var(--color-background) 0%, var(--color-surface) 100%);
  }
  
  .hero-container {
    max-width: 1200px;
    width: 100%;
    padding: 0 var(--space-10);
    text-align: center;
    position: relative;
    z-index: 10;
  }
  
  /* Hero Content */
  .hero-eyebrow {
    margin-bottom: var(--space-6);
    opacity: 0;
    animation: fadeInUp 0.8s var(--ease-out) 0.2s forwards;
  }
  
  .eyebrow-text {
    display: inline-block;
    font-size: var(--text-xl);
    font-weight: 600;
    color: var(--color-accent);
    letter-spacing: 0.02em;
    padding: var(--space-2) var(--space-4);
    background: rgba(0, 122, 255, 0.1);
    border-radius: var(--radius-2xl);
    backdrop-filter: blur(20px);
  }
  
  .hero-title {
    font-size: clamp(48px, 8vw, 96px);
    font-weight: 700;
    line-height: 1.1;
    letter-spacing: -0.02em;
    color: var(--color-primary);
    margin-bottom: var(--space-8);
    opacity: 0;
    animation: fadeInUp 0.8s var(--ease-out) 0.4s forwards;
  }
  
  .hero-description {
    font-size: clamp(18px, 2.5vw, 24px);
    font-weight: 400;
    line-height: 1.5;
    color: var(--color-secondary);
    margin-bottom: var(--space-12);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    opacity: 0;
    animation: fadeInUp 0.8s var(--ease-out) 0.6s forwards;
  }
  
  /* Hero Actions */
  .hero-actions {
    display: flex;
    gap: var(--space-6);
    justify-content: center;
    margin-bottom: var(--space-20);
    opacity: 0;
    animation: fadeInUp 0.8s var(--ease-out) 0.8s forwards;
  }
  
  .btn-primary,
  .btn-secondary {
    padding: var(--space-4) var(--space-8);
    border-radius: var(--radius-full);
    font-size: var(--text-xl);
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    border: none;
    transition: all 0.3s var(--ease-out);
    min-width: 180px;
  }
  
  .btn-primary {
    background: var(--color-primary);
    color: var(--color-background);
    box-shadow: 0 4px 16px rgba(29, 29, 31, 0.2);
  }
  
  .btn-primary:hover {
    background: var(--color-accent);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 122, 255, 0.3);
  }
  
  .btn-secondary {
    background: transparent;
    color: var(--color-accent);
    border: 2px solid var(--color-accent);
  }
  
  .btn-secondary:hover {
    background: var(--color-accent);
    color: var(--color-background);
    transform: translateY(-2px);
  }
  
  /* KPI Showcase */
  .kpi-showcase {
    margin-bottom: 60px;
    opacity: 0;
    animation: fadeInUp 0.8s var(--ease-out) 1s forwards;
  }
  
  .kpi-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--space-10);
    max-width: 900px;
    margin: 0 auto;
  }
  
  .kpi-item {
    text-align: center;
  }
  
  .kpi-value {
    font-size: clamp(36px, 5vw, 48px);
    font-weight: 700;
    color: var(--color-primary);
    margin-bottom: var(--space-2);
    display: flex;
    align-items: baseline;
    justify-content: center;
    gap: var(--space-1);
  }
  
  .kpi-unit,
  .kpi-prefix {
    font-size: 0.6em;
    color: var(--color-accent);
  }
  
  .animated-number {
    font-variant-numeric: tabular-nums;
  }
  
  .kpi-label {
    font-size: var(--text-lg);
    font-weight: 500;
    color: var(--color-secondary);
    letter-spacing: 0.01em;
  }
  
  /* Scroll Indicator */
  .scroll-indicator {
    position: absolute;
    bottom: var(--space-10);
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
    opacity: 0;
    animation: fadeIn 1s var(--ease-out) 1.5s forwards;
  }
  
  .scroll-text {
    font-size: var(--text-base);
    color: var(--color-secondary);
    margin-bottom: 12px;
  }
  
  .scroll-arrow {
    color: var(--color-secondary);
    animation: bounce 2s infinite;
  }
  
  /* Background Elements */
  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
  }
  
  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
    opacity: 0.3;
    animation: float 6s ease-in-out infinite;
  }
  
  .gradient-orb-1 {
    width: 400px;
    height: 400px;
    background: linear-gradient(135deg, var(--color-accent), var(--color-accent-secondary));
    top: 10%;
    right: 10%;
    animation-delay: 0s;
  }
  
  .gradient-orb-2 {
    width: 300px;
    height: 300px;
    background: linear-gradient(135deg, #FF6B6B, #FF8E8E);
    bottom: 20%;
    left: 10%;
    animation-delay: -2s;
  }
  
  .gradient-orb-3 {
    width: 200px;
    height: 200px;
    background: linear-gradient(135deg, #4ECDC4, #44A08D);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation-delay: -4s;
  }
  
  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    33% {
      transform: translateY(-20px) rotate(1deg);
    }
    66% {
      transform: translateY(10px) rotate(-1deg);
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .apple-hero {
      min-height: 700px;
      padding: 60px 0;
    }
    
    .hero-container {
      padding: 0 20px;
    }
    
    .hero-title {
      margin-bottom: 24px;
    }
    
    .hero-description {
      margin-bottom: 32px;
    }
    
    .hero-actions {
      flex-direction: column;
      align-items: center;
      gap: 16px;
      margin-bottom: 60px;
    }
    
    .btn-primary,
    .btn-secondary {
      width: 100%;
      max-width: 280px;
    }
    
    .kpi-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 24px;
    }
    
    .gradient-orb {
      transform: scale(0.7);
    }
  }
  
  @media (max-width: 480px) {
    .kpi-grid {
      grid-template-columns: 1fr;
      gap: 20px;
    }
    
    .kpi-value {
      font-size: 32px;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .apple-hero * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<script>
  class AppleHero {
    constructor() {
      this.animatedNumbers = document.querySelectorAll('.animated-number');
      this.init();
    }
    
    init() {
      this.animateNumbers();
      this.setupIntersectionObserver();
    }
    
    animateNumbers() {
      this.animatedNumbers.forEach((element, index) => {
        const target = parseFloat(element.getAttribute('data-target'));
        const duration = 2000; // 2 seconds
        const startDelay = 1200 + (index * 200); // Stagger the animations
        
        setTimeout(() => {
          this.animateValue(element, 0, target, duration);
        }, startDelay);
      });
    }
    
    animateValue(element, start, end, duration) {
      const startTime = performance.now();
      const isDecimal = end % 1 !== 0;
      
      const updateValue = (currentTime) => {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        
        // Use easeOutCubic for smooth animation
        const easeProgress = 1 - Math.pow(1 - progress, 3);
        const current = start + (end - start) * easeProgress;
        
        if (isDecimal) {
          element.textContent = current.toFixed(1);
        } else {
          element.textContent = Math.round(current);
        }
        
        if (progress < 1) {
          requestAnimationFrame(updateValue);
        } else {
          element.textContent = isDecimal ? end.toFixed(1) : end;
        }
      };
      
      requestAnimationFrame(updateValue);
    }
    
    setupIntersectionObserver() {
      const options = {
        root: null,
        rootMargin: '0px',
        threshold: 0.1
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
          }
        });
      }, options);
      
      // Observe animated elements
      document.querySelectorAll('.kpi-item').forEach(item => {
        observer.observe(item);
      });
    }
  }
  
  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new AppleHero();
  });
  
  // Handle scroll to next section
  document.addEventListener('DOMContentLoaded', () => {
    const scrollIndicator = document.querySelector('.scroll-indicator');
    if (scrollIndicator) {
      scrollIndicator.addEventListener('click', () => {
        const nextSection = document.querySelector('.apple-hero').nextElementSibling;
        if (nextSection) {
          nextSection.scrollIntoView({ 
            behavior: 'smooth',
            block: 'start' 
          });
        }
      });
    }
  });
</script>